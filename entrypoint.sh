#!/bin/sh -e

# custom entrypoint script that can be run to auto-generate nifi keystore/truststore
# from a server running the nifi tls-toolkit

# it is suggested that a persistant volume is mounted at /opt/nifi/nifi-current/conf/certs
# to persistantly store the certificates

# additional ca certifcates can be imported to the truststore automatically by setting
# the ADDITIONAL_CA_CERTS environment variable to a space seperated list of paths to the
# additional certs

scripts_dir='/opt/nifi/scripts'

if [[ -z $CERTS_DIRECTORY ]]; then
    CERTS_DIRECTORY=$NIFI_HOME/conf/certs
fi

mkdir -p $CERTS_DIRECTORY
cd $CERTS_DIRECTORY

KEYSTORE_PATH="$CERTS_DIRECTORY/keystore.jks"
TRUSTSTORE_PATH="$CERTS_DIRECTORY/truststore.jks"

if [[ ! -f $KEYSTORE_PATH && ! -f $TRUSTSTORE_PATH ]]; then
    # Run the tls-toolkit in client mode to generate the truststore and keystore
    /opt/nifi/nifi-toolkit-current/bin/tls-toolkit.sh client \
        -c "${CA_SERVER_HOSTNAME}" \
        -t "${CA_SERVER_TOKEN}" \
        --dn "CN=$(hostname -f)" \
        --subjectAlternativeNames "$(hostname -f)" ||  exit 1
fi

# Use jq to extract the passwords form the config.json generated by the tls-toolkit
export KEYSTORE_PASSWORD=`jq -r '.keyStorePassword' $CERTS_DIRECTORY/config.json`
export KEY_PASSWORD=`jq -r '.keyPassword' $CERTS_DIRECTORY/config.json`
export KEYSTORE_PATH=$KEYSTORE_PATH
export KEYSTORE_TYPE=JKS
export TRUSTSTORE_PASSWORD=`jq -r '.trustStorePassword' $CERTS_DIRECTORY/config.json`
export TRUSTSTORE_PATH=$TRUSTSTORE_PATH
export TRUSTSTORE_TYPE=JKS

# import any additional certs to the truststore
if [[ ! -z $ADDITIONAL_CA_CERTS ]]; then
    for cert in $ADDITIONAL_CA_CERTS; do
        echo -n "importing ca certificate $cert to $TRUSTSTORE_PATH... "
        if [[ ! -f $cert ]]; then
            echo "ERROR: file not found"; exit 1
        fi
        keytool -import -v -trustcacerts -noprompt \
            -alias $cert -file $cert \
            -keystore truststore.jks -storepass $TRUSTSTORE_PASSWORD && echo "OK" || exit 1
    done
fi

# run Apache's entrypoint
$scripts_dir/start.sh
